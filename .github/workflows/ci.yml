name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '59 23 28-31 * *'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        crate_name:
          - icx-asset
          - icx-cert
          - icx-proxy

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get Timestamp
      id: timestamp
      run: echo "TIMESTAMP=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

    - name: Set up Rust
      uses: moonrepo/setup-rust@v1
      with:
        channel: stable
        profile: minimal
        cache-base: main

    - name: Install Dependencies
      run: cargo install ${{ matrix.crate_name }}

    - name: Create Artifact
      run: |
        mkdir -p combined_artifacts
        cp -rf ~/.cargo/bin/icx-asset combined_artifacts/
        cp -rf ~/.cargo/bin/icx-cert combined_artifacts/
        cp -rf ~/.cargo/bin/icx-proxy combined_artifacts/
      if: matrix.crate_name == 'icx-proxy'

    - name: Upload Combined Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: rust-artifacts-${{ env.TIMESTAMP }}
        path: combined_artifacts

    - name: Set up Git
      run: |
        git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
        git config --global user.name "${GITHUB_ACTOR}"

    - name: Create and Push Tag
      run: git tag -a combined_release_${{ env.TIMESTAMP }} -m "Combined release ${GITHUB_SHA}"
      if: github.event_name == 'push'

    - name: Push Tag
      run: git push origin combined_release_${{ env.TIMESTAMP }}
      if: github.event_name == 'push'

    - name: Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: combined_artifacts
        tag: combined_release_${{ env.TIMESTAMP }}
        name: Combined Release
      if: github.event_name == 'push'
