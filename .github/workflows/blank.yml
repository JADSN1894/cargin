# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '59 23 28-31 * *'  # Runs at 11:00 PM UTC on the 28th, 29th, 30th, and 31st day of each month

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        package:
          - icx-asset
          - icx-cert
          - icx-proxy
          
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Rust
      uses: moonrepo/setup-rust@v1
      with:
        channel: stable
        profile: minimal
        cache-base: main

    - name: Install Dependencies
      run: cargo install ${{ matrix.package }}
      
    - name: Create Artifact
      uses: actions/upload-artifact@v3
      #with: # Alternative 1
      #name: rust-artifacts
      #  path: |
      #    ~/.cargo/bin/crate_1
      #    ~/.cargo/bin/crate_2
      #with: # Alternative 2
      #  name: artifacts-${{ matrix.package }}
      #  path: |
      #    ~/.cargo/bin/${{ matrix.package }} 
      with: # Alternative 3
        name: rust-artifacts
        path: ~/.cargo/bin
        
  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 'lts'

    - name: Install dependencies
      run: npm install -g @actions/github-script@v7

    - name: Create Release
      run: |
        github.script('
          const tag = "vX.Y.Z"; // Replace with your version
          const octokit = github.getOctokit(process.env.GITHUB_TOKEN);
          const { data: release } = await octokit.repos.createRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            tag_name: tag,
            name: "Release " + tag,
            body: "Release notes for " + tag,
            draft: false,
            prerelease: false,
          });
          console.log("Created release:", release);
        ');
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
