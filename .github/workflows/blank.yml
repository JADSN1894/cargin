# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '59 23 28-31 * *'  # Runs at 11:00 PM UTC on the 28th, 29th, 30th, and 31st day of each month

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        package:
          #- icx-asset
          - icx-cert
          #- icx-proxy
          
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Rust
      uses: moonrepo/setup-rust@v1
      with:
        channel: stable
        profile: minimal
        cache-base: main

    - name: Install Dependencies
      run: cargo install ${{ matrix.package }}
      
    - name: Create Artifact
      uses: actions/upload-artifact@v3
      #with: # Alternative 1
      #name: rust-artifacts
      #  path: |
      #    ~/.cargo/bin/crate_1
      #    ~/.cargo/bin/crate_2
      #with: # Alternative 2
      #  name: artifacts-${{ matrix.package }}
      #  path: |
      #    ~/.cargo/bin/${{ matrix.package }} 
      with: # Alternative 3
        name: rust-artifacts
        path: ~/.cargo/bin
        
  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
          fetch-depth: '0'

    - name: Generate Git Tag
      id: generate_tag
      run: |
        VERSION_PREFIX="v"
        VERSION_MAJOR_MINOR="1.0"
        VERSION_PATCH=$(git tag --list "${VERSION_PREFIX}${VERSION_MAJOR_MINOR}.*" --sort=-version:refname | head -n 1 | grep -oE '[0-9]+$')
        if [ -z "$VERSION_PATCH" ]; then
          VERSION_PATCH=0
        else
          VERSION_PATCH=$((VERSION_PATCH + 1))
        fi
        NEW_TAG="${VERSION_PREFIX}${VERSION_MAJOR_MINOR}.${VERSION_PATCH}"
        echo "Generated new tag: $NEW_TAG"
        echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

    - name: Push Git Tag
      run: |
        git config user.name "GitHub Actions"
        git config user.email "github-actions@users.noreply.github.com"
        git tag $NEW_TAG
        git push origin $NEW_TAG
